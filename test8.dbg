Input file: test8.ss
   1: ;; Project 3 Test 8
   2: 
   3: (define (insert_last ls v)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         insert_last
	IDENT_T         ls
	IDENT_T         v
	RPAREN_T        )
   4:         (if (list? ls)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LISTP_T         list?
	IDENT_T         ls
	RPAREN_T        )
   5:         	(if (null? ls)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	NULLP_T         null?
	IDENT_T         ls
	RPAREN_T        )
   6:                 	(cons v '())
	LPAREN_T        (
	CONS_T          cons
	IDENT_T         v
	SQUOTE_T        '
	LPAREN_T        (
	RPAREN_T        )
	RPAREN_T        )
   7:                 	(cons (car ls) (insert_last (cdr ls) v))
	LPAREN_T        (
	CONS_T          cons
	LPAREN_T        (
	LISTOP_T        car
	IDENT_T         ls
	RPAREN_T        )
	LPAREN_T        (
	IDENT_T         insert_last
	LPAREN_T        (
	LISTOP_T        cdr
	IDENT_T         ls
	RPAREN_T        )
	IDENT_T         v
	RPAREN_T        )
	RPAREN_T        )
   8: 		)
	RPAREN_T        )
   9:         	'first_argument_of_insert_last_must_be_a_list
	SQUOTE_T        '
	IDENT_T         first_argument_of_insert_last_must_be_a_list
  10: 	)
	RPAREN_T        )
  11: )
	RPAREN_T        )
  12: 
  13: (define (list_reverse ls)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         list_reverse
	IDENT_T         ls
	RPAREN_T        )
  14:         (if (list? ls)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	LISTP_T         list?
	IDENT_T         ls
	RPAREN_T        )
  15:             	(if (null? ls)
	LPAREN_T        (
	IF_T            if
	LPAREN_T        (
	NULLP_T         null?
	IDENT_T         ls
	RPAREN_T        )
  16:                 	'()
	SQUOTE_T        '
	LPAREN_T        (
	RPAREN_T        )
  17:                 	(insert_last (list_reverse (cdr ls)) (car ls))
	LPAREN_T        (
	IDENT_T         insert_last
	LPAREN_T        (
	IDENT_T         list_reverse
	LPAREN_T        (
	LISTOP_T        cdr
	IDENT_T         ls
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	LISTOP_T        car
	IDENT_T         ls
	RPAREN_T        )
	RPAREN_T        )
  18: 		)
	RPAREN_T        )
  19:             	'list_reverse_requires_a_list_argument)
	SQUOTE_T        '
	IDENT_T         list_reverse_requires_a_list_argument
	RPAREN_T        )
  20: )
	RPAREN_T        )
  21: 
  22: (define (main)
	LPAREN_T        (
	DEFINE_T        define
	LPAREN_T        (
	IDENT_T         main
	RPAREN_T        )
  23: 	(display (list_reverse '(indentifier numeric literal cons if display newline
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	IDENT_T         list_reverse
	SQUOTE_T        '
	LPAREN_T        (
	IDENT_T         indentifier
	IDENT_T         numeric
	IDENT_T         literal
	CONS_T          cons
	IF_T            if
	DISPLAY_T       display
	NEWLINE_T       newline
  24:         			 cddr and or not define number? symbol list? zero?
	LISTOP_T        cddr
	AND_T           and
	OR_T            or
	NOT_T           not
	DEFINE_T        define
	NUMBERP_T       number?
	IDENT_T         symbol
	LISTP_T         list?
	ZEROP_T         zero?
  25: 				 null? modulo string? + - / * = > < >= <= 'anything
	NULLP_T         null?
	MODULO_T        modulo
	STRINGP_T       string?
	PLUS_T          +
	MINUS_T         -
	DIV_T           /
	MULT_T          *
	EQUALTO_T       =
	GT_T            >
	LT_T            <
	GTE_T           >=
	LTE_T           <=
	SQUOTE_T        '
	IDENT_T         anything
  26: 				 1 1.01 "HelloWorld")))
	NUMLIT_T        1
	NUMLIT_T        1.01
	STRLIT_T        "HelloWorld"
	RPAREN_T        )
	RPAREN_T        )
	RPAREN_T        )
  27: 	(newline)
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  28: 	(display (cons 'a 'b)) (newline)
	LPAREN_T        (
	DISPLAY_T       display
	LPAREN_T        (
	CONS_T          cons
	SQUOTE_T        '
	IDENT_T         a
	SQUOTE_T        '
	IDENT_T         b
	RPAREN_T        )
	RPAREN_T        )
	LPAREN_T        (
	NEWLINE_T       newline
	RPAREN_T        )
  29: )
	RPAREN_T        )
	EOF_T           
Error at 29,2: 'LPAREN_T' expected 
Error at 29,2: '' unexpected 
Error at 29,2: '' unexpected 
3 errors found in input file
