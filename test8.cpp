// Autogenerated Scheme to C++ Code
// File: test8.cpp
#include <iostream>
#include "Object.h"
using namespace std;

Object insert_last (Object ls  , Object v )
{
	if (listp(Object (ls))){
	if (nullp(Object (ls))){
	return cons(Object (v), Object ("()"));
	} else {
	return cons((listop("car", Object (ls))), (insert_last((listop("cdr", Object (ls))) ,  Object (v))));
}
;
	} else {
	return Object ("first_argument_of_insert_last_must_be_a_list");
}
;
	return Object();
}
Object list_reverse (Object ls )
{
	if (listp(Object (ls))){
	if (nullp(Object (ls))){
	return Object ("()");
	} else {
	return insert_last((list_reverse((listop("cdr", Object (ls))))) ,  (listop("car", Object (ls))));
}
;
	} else {
	return Object ("list_reverse_requires_a_list_argument");
}
;
	return Object();
}
int main()
{
	cout << (list_reverse(Object ("(indentifier numeric literal cons if display newline cddr and or not define number? symbol list? zero? null? modulo string? + - / * = > < >= <= 'anything 1 1.01 \"HelloWorld\")")));
	cout << endl;
	cout << (cons(Object ("a"), Object ("b")));
	cout << endl;
	return 0;
}